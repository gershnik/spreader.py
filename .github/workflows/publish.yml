name: Publish package
on: workflow_dispatch

jobs:
  prepare:
    runs-on: ubuntu-latest
    permissions: write-all
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: true

      - name: Git configuration
        run: |
          git config --global user.email "<>"
          git config --global user.name "GitHub Actions"

      - name: Setup python environment
        run: |
          pip3 install -r requirements.txt

      - name: Set release version
        run: |
          echo "NEW_VERSION=$(tools/update-version.py release)" >> $GITHUB_ENV

      - name: Update changelog
        uses: superfaceai/release-changelog-action@v2
        with:
          path-to-changelog: CHANGELOG.md
          version: ${{ env.NEW_VERSION }}
          operation: release

      - name: Commit CHANGELOG.md and package.json changes and create tag
        id: tagRelease
        run: |
          git add "setup.py"
          git add "CHANGELOG.md"
          git commit -m "chore: release ${{ env.NEW_VERSION }}"
          git tag v${{ env.NEW_VERSION }}
          echo "newVersion=${{ env.NEW_VERSION }}" >> "$GITHUB_OUTPUT"

      - name: Set next dev version
        run: |
          NEXT_VERSION=$(tools/update-version.py nextpatch)
          git add "setup.py"   
          git commit -m "chore: bump version to $NEXT_VERSION"

      - name: Push changes to repository
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git push origin && git push --tags

      - name: Build Source Distribution
        run: |
          rm -rf code/wrappers/python/src/spreader.egg-info 
          mkdir -p dist/tmp 
          python3 setup.py egg_info --egg-base dist/tmp sdist 

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          path: dist/*.tar.gz

    outputs:
      newVersion: ${{ steps.tagRelease.outputs.newVersion }}

  wheels:
    needs: prepare
    runs-on: ${{matrix.os}}
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest, macos-latest]
        pyver: [cp37, cp38, cp39, cp310, pp38, pp39]

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: v${{needs.prepare.outputs.newVersion}}
          submodules: true CMAKE_OSX_ARCHITECTURES=arm64;x86_64

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.12
        env:
          CIBW_BUILD: ${{matrix.pyver}}-*
          CIBW_ARCHS_MACOS: auto universal2
          CIBW_ARCHS_WINDOWS: auto ARM64
          CIBW_TEST_EXTRAS: pytest
          CIBW_TEST_COMMAND: pytest --color=yes {project}/code/wrappers/python

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          path: ./wheelhouse/*.whl

  wrapup:
    needs: prepare, wheels
    runs-on: ubuntu-latest
    permissions: write-all
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: v${{needs.prepare.outputs.newVersion}}
          submodules: true

      - name: Setup python environment
        run: |
          pip3 install -r requirements.txt

      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          name: artifact
          path: dist

      - name: Publish
        run: twine upload --non-interactive dist/* 
        env:
          TWINE_REPOSITORY: testpypi
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.TESTPYPI_ACCESS_TOKEN }}

      - id: get-changelog
        name: Get version changelog
        uses: superfaceai/release-changelog-action@v2
        with:
          path-to-changelog: CHANGELOG.md
          version: ${{needs.prepare.outputs.newVersion}}
          operation: read

      - name: Update GitHub release documentation
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{needs.prepare.outputs.newVersion}}
          body: ${{ steps.get-changelog.outputs.changelog }}
          files: |
            dist/*
          draft: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          

